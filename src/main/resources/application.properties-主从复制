# \u5E94\u7528\u540D\u79F0
spring.application.name=sharging-jdbc-demo
# \u5F00\u53D1\u73AF\u5883\u8BBE\u7F6E
spring.profiles.active=dev
# \u5185\u5B58\u6A21\u5F0F
spring.shardingsphere.mode.type=Memory

# \u6253\u5370SQl
spring.shardingsphere.props.sql-show=true

# \u914D\u7F6E\u771F\u5B9E\u6570\u636E\u6E90
spring.shardingsphere.datasource.names=server-user,server-order0,server-order1

# \u914D\u7F6E\u7B2C 1 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.server-user.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-user.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.server-user.jdbc-url=jdbc:mysql://192.168.200.130:3301/db_user
spring.shardingsphere.datasource.server-user.username=root
spring.shardingsphere.datasource.server-user.password=123456

# \u914D\u7F6E\u7B2C 2 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.server-order0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-order0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.server-order0.jdbc-url=jdbc:mysql://192.168.200.130:3310/db_order
spring.shardingsphere.datasource.server-order0.username=root
spring.shardingsphere.datasource.server-order0.password=123456

# \u914D\u7F6E\u7B2C 3 \u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.server-order1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-order1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.server-order1.jdbc-url=jdbc:mysql://192.168.200.130:3311/db_order
spring.shardingsphere.datasource.server-order1.username=root
spring.shardingsphere.datasource.server-order1.password=123456

#========================\u6807\u51C6\u5206\u7247\u8868\u914D\u7F6E\uFF08\u6570\u636E\u8282\u70B9\u914D\u7F6E\uFF09
# spring.shardingsphere.rules.sharding.tables.<table-name>.actual-data-nodes=\u503C
# \u503C\u7531\u6570\u636E\u6E90\u540D + \u8868\u540D\u7EC4\u6210\uFF0C\u4EE5\u5C0F\u6570\u70B9\u5206\u9694\u3002\u591A\u4E2A\u8868\u4EE5\u9017\u53F7\u5206\u9694\uFF0C\u652F\u6301 inline \u8868\u8FBE\u5F0F\u3002
# <table-name>\uFF1A\u903B\u8F91\u8868\u540D
spring.shardingsphere.rules.sharding.tables.t_user.actual-data-nodes=server-user.t_user
#spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=server-order1.t_order0
#spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=server-order$->{0..1}.t_order0
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=server-order$->{0..1}.t_order$->{0..1}
#------------------------\u6807\u51C6\u5206\u7247\u8868\u914D\u7F6E\uFF08\u6570\u636E\u8282\u70B9\u914D\u7F6E\uFF09
spring.shardingsphere.rules.sharding.tables.t_order_item.actual-data-nodes=server-order$->{0..1}.t_order_item$->{0..1}

#------------------------\u6C34\u5E73\u5206\u5E93\u7B56\u7565
# \u5206\u7247\u5217\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
# \u5206\u7247\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=alg_inline_userid

#------------------------\u6C34\u5E73\u5206\u5E93\u7B97\u6CD5\u914D\u7F6E
# \u884C\u8868\u8FBE\u5F0F\u5206\u7247\u7B97\u6CD5
# \u5206\u7247\u7B97\u6CD5\u7C7B\u578B
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_userid.type=INLINE
# \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_userid.props.algorithm-expression=server-order$->{user_id % 2}


# \u53D6\u6A21\u5206\u7247\u7B97\u6CD5
# \u5206\u7247\u7B97\u6CD5\u7C7B\u578B-- \u5728\u7ED1\u5B9A\u8868
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.type=MOD
# \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.props.sharding-count=2

#------------------------\u5206\u8868\u7B56\u7565
# \u5206\u7247\u5217\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_no
# \u5206\u7247\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=alg_hash_mod

#------------------------\u5206\u8868\u7B97\u6CD5\u914D\u7F6E
# \u54C8\u5E0C\u53D6\u6A21\u5206\u7247\u7B97\u6CD5
# \u5206\u7247\u7B97\u6CD5\u7C7B\u578B
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.type=HASH_MOD
# \u5206\u7247\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.props.sharding-count=2

#------------------------\u5206\u5E03\u5F0F\u5E8F\u5217\u7B56\u7565\u914D\u7F6E
# \u5206\u5E03\u5F0F\u5E8F\u5217\u5217\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=id
# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=alg_snowflake

# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u914D\u7F6E
# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u7C7B\u578B
spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type=SNOWFLAKE
# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E
#spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.props.xxx=

#------------------------\u7ED1\u5B9A\u8868
spring.shardingsphere.rules.sharding.binding-tables[0]=t_order,t_order_item

#------------------------\u5206\u5E93\u7B56\u7565---user_id-----
# \u5206\u7247\u5217\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order_item.database-strategy.standard.sharding-column=user_id
# \u5206\u7247\u7B97\u6CD5\u540D\u79F0
#spring.shardingsphere.rules.sharding.tables.t_order_item.database-strategy.standard.sharding-algorithm-name=alg_mod
spring.shardingsphere.rules.sharding.tables.t_order_item.database-strategy.standard.sharding-algorithm-name=alg_inline_userid

#------------------------\u5206\u8868\u7B56\u7565
# \u5206\u7247\u5217\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_no
# \u5206\u7247\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-algorithm-name=alg_hash_mod

#------------------------\u5206\u5E03\u5F0F\u5E8F\u5217\u7B56\u7565\u914D\u7F6E
# \u5206\u5E03\u5F0F\u5E8F\u5217\u5217\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.column=id
# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.key-generator-name=alg_snowflake


#\u6570\u636E\u8282\u70B9\u53EF\u4E0D\u914D\u7F6E\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5411\u6240\u6709\u6570\u636E\u6E90\u5E7F\u64AD
spring.shardingsphere.rules.sharding.tables.t_dict.actual-data-nodes=server-user.t_dict,server-order$->{0..1}.t_dict
# \u5E7F\u64AD\u8868
spring.shardingsphere.rules.sharding.broadcast-tables[0]=t_dict

